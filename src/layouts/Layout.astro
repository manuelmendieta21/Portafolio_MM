---
import Header from '../components/Header.astro';
// Importa la fuente
import '@fontsource-variable/onest';
interface Props {
	title: string;
	description: string;
}

const { description, title } = Astro.props;
---

<!doctype html>
<html lang="es">
<head>
	<meta charset="UTF-8" />
	<meta name="description" content={description} />
	<meta name="viewport" content="width=device-width" />
	<link rel="icon" type="image/png" href="/Group.png" />
	<script src="https://cdn.jsdelivr.net/npm/canvas-confetti@1.9.3/dist/confetti.browser.min.js"></script>
	<meta name="generator" content={Astro.generator} />
	
	<title>{title}</title>
</head>
<body data-theme="light">
	<!-- Fondo del modo claro -->
	<div id="light-bg" class="fixed left-0 top-0 -z-10 h-full w-full">
		<div class="absolute inset-0 z-[-2] min-h-screen w-screen bg-white bg-[radial-gradient(#e5e7eb_1px,transparent_0.5px)] bg-[size:25px_25px]">
		</div>
	</div>

	<!-- Fondo del modo oscuro -->
	<div id="dark-bg" class="fixed left-0 top-0 -z-10 h-full w-full hidden">
		<div class="absolute inset-0 z-[-2] min-h-screen w-screen bg-[#000000] bg-[radial-gradient(#ffffff33_1px,#00091d_1px)] bg-[size:30px_30px]"></div>
	</div>

	<Header />
	<slot />
</body>

<script async is:inline src="https://www.googletagmanager.com/gtag/js?id=G-HK5SPLLTXH"></script>


</html>

<style is:global>
	:root {
		color-scheme: light dark;
	}
	html {
		font-family: 'Onest', sans-serif;
	}
	body {
		min-height: 100vh;
		transition: background-color 0.3s, color 0.3s;
	}
	/* Modo claro */
	[data-theme="light"] {
		background-color: #ffffff;
		color: #000000;
	}
	/* Modo oscuro */
	[data-theme="dark"] {
		background-color: #000000;
		color: #ffffff;
	}
</style>

<script>
	// Seleccionar elementos
	const themeToggleButton = document.getElementById('theme-toggle');
	const prefersDarkScheme = window.matchMedia('(prefers-color-scheme: dark)');
	const lightBg = document.getElementById('light-bg');
	const darkBg = document.getElementById('dark-bg');

	// Establecer tema inicial basado en la preferencia guardada o el sistema operativo
	const currentTheme = localStorage.getItem('theme') || (prefersDarkScheme.matches ? 'dark' : 'light');
	document.body.setAttribute('data-theme', currentTheme);
	toggleBackground(currentTheme);

	// Verificar que el botón de alternar tema existe antes de añadir el evento
	if (themeToggleButton) {
		themeToggleButton.addEventListener('click', () => {
			const isDarkMode = document.body.getAttribute('data-theme') === 'light';
			const newTheme = isDarkMode ? 'dark' : 'light';
			document.body.setAttribute('data-theme', newTheme);
			
			// Alternar fondos
			toggleBackground(newTheme);

			// Guardar la preferencia en localStorage
			localStorage.setItem('theme', newTheme);
		});
	}

	// Función para alternar la visibilidad de los fondos
	function toggleBackground(theme:string ) {
		if (theme === 'dark') {
			if (lightBg) lightBg.classList.add('hidden');
			if (darkBg) darkBg.classList.remove('hidden');
		} else {
			if (lightBg) lightBg.classList.remove('hidden');
			if (darkBg) darkBg.classList.add('hidden');
		}
	}

	
</script>